name: Calculator CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "21"

      - name: Install dependencies
        run: npm install

      - name: Install dependencies
        run: yarn

      - name: Test and coverage
        run: yarn vitest --coverage

      #Exécuter le build de l'application
      - name: Build the application
        run: npm run build || true

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4.1.0
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL}} # URL pour le serveur SonarQube/SonarCloud
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_SCANNER_OPTS: "-X"
        with:
          args: >
            -Dsonar.projectKey=nessmahm_calculator
            -Dsonar.qualitygate.wait=true # Attendre l'état de la Quality Gate
            -Dsonar.qualitygate.timeout=300

      # Check the Quality Gate status.
      - name: SonarQube Server Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

      - name: "Example show SonarQube Server Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

      - name: Confirm Build Success
        run: echo "Build completed successfully!"
